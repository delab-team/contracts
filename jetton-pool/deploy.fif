#!/usr/bin/fift -s
"TonUtil.fif"   include
"GetOpt.fif"    include

"build/main.code.boc"  file>B B>boc =: pool-code
"build/store.code.boc" file>B B>boc =: stor-code

{ show-options-help 1 halt } : usage
begin-options "<config-file> <save-file>" +cr +cr
    +"Creates the jetton-pool contract deploy state init and body," +cr
    +"than saves it to <savefile>.init.boc, <savefile>.body.boc" +cr +tab

    disable-digit-options generic-help-setopt
    "h" "--help" { usage } short-long-option
    "Shows a help message" option-help
parse-options

$# 2 <> ' usage if

0  =: workchain-id
$1 =: config-file
$2 =: save-file

{ bl word parse-smc-addr drop 2=: initializer   } : INITIALIZER:
{ bl word parse-smc-addr drop 2=: token-a-addr  } : TOKEN_A:
{ bl word parse-smc-addr drop 2=: token-b-addr  } : TOKEN_B:
{ bl word parse-int            =: reward-amount } : REWARD_AMOUNT:
{ bl word parse-int            =: reward-interv } : REWARD_INTERV:

config-file include

<b  // msg body (constructor_query)
    0xe1 32 u, now 64 u,
    token-a-addr  Addr,
    token-b-addr  Addr,
    reward-amount Gram,
    reward-interv 32 u,
    stor-code     ref,
b>  =: msg-bodycc

// init storage (inited?, initializer, salt)
<b false 1 i, initializer Addr, newkeypair drop B, b>        =: init-storage
<b b{0011} s, pool-code ref, init-storage ref, null dict, b> =: state-init

state-init hashu workchain-id swap .addr cr
state-init 2 boc+>B save-file +".init.boc" tuck B>file
msg-bodycc 2 boc+>B save-file +".body.boc" tuck B>file
."body and state init saved to: " type ."; " type cr
