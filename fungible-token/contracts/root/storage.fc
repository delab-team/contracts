#pragma version ^0.3.0;

global int      self::inited?;
global int      self::mintable?;
global int      self::total_supply;
global slice    self::owner_address;
global cell     self::metadata;
global cell     self::wallet_code;

() _load_data() impure inline_ref {
    slice data = get_data().begin_parse();

    self::inited?           = data~load_int(1);
    self::mintable?         = data~load_int(1);
    self::total_supply      = data~load_coins();
    self::owner_address     = data~load_msg_addr();
    self::metadata          = data~load_ref();
    self::wallet_code       = data~load_ref();
}

() _save_data() impure inline_ref {
    builder data = begin_cell()
        .store_int(self::inited?, 1)        ;; + stc 1   bit
        .store_int(self::mintable?, 1)      ;; + stc 1   bit
        .store_coins(self::total_supply)    ;; + max 124 bit
        .store_slice(self::owner_address)   ;; + max 267 bit (addr_std$10 without Anycast)
        .store_ref(self::metadata)          ;; + stc 1   ref
        .store_ref(self::wallet_code);      ;; + stc 1   ref

    ;; save maximum 393 and 2 refs cell to storage
    set_data(data.end_cell());
}
